h1. Alchemist

Doing conversions for you so you don't have to google them and making code more readable.  

Having code that looks like this is meaningless

<pre>miles = 8 * 1609.344</pre>

You could add comments

<pre>miles = 8 * 1609.344 # converting meters to miles</pre>

But why not have this!

<pre>8.meters.to.miles</pre>

You can even perform mathematical operations

<pre>10.kilometers + 1.mile # 11.609344 kilometers</pre>

Handling bytes now works according to the JEDEC memory standard

<pre>1.kb.to.b.to_f == 1024.0</pre>

To switch to the IEC memory standard, force SI units with

<pre>Alchemist::use_si = true</pre>

<strong>You may also register your own units</strong>

<pre>Alchemist.register(:distance, [:beard_second, :beard_seconds], 5.angstroms)</pre>


Thanks to <a href='http://github.com/simonmenke'>simonmenke</a> you can now do comparisons without having to convert to floats like so:

<pre>5.grams == 0.005.kilograms</pre>


h2. Installation

<pre>
gem sources -a http://gemcutter.org
sudo gem install alchemist
</pre>

h2. Usage

<pre>
require 'rubygems'
require 'alchemist'     
</pre>

Or if you're using rails

<pre>
config.gem 'alchemist', :source => 'http://gemcutter.org'
</pre>

h2. Alchemist has conversions for:

h3. Distance

* metres or meters
* fermis
* microns
* chains
* inches
* microinches
* mils
* rods
* leagues
* feet
* yards
* miles
* astronomical_units
* light_years
* parsecs
* nautical_miles
* admirality_miles
* fathoms
* cable_lengths
* angstroms
* picas
* printer_picas
* points
* printer_points

h3. Mass

* grams or grammes
* carats
* ounces
* pennyweights
* pounds
* troy_pounds or apothecary_pounds
* slugs
* assay_tons
* metric_tons
* tons or short_tons

h3. Volume

* litres or liters
* barrels
* bushels
* cubic_meters
* cups
* imperial_fluid_ounces
* fluid_ounces
* imperial_gallons
* gallons
* imperial_gills
* gills
* pints
* liquid_pints
* quarts
* liquid_quarts
* tablespoons
* teaspoons

h3. And many more checkout *lib/alchemist.rb* for the rest
